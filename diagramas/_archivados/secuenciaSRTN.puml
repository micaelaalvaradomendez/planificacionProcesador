@startuml 07-secuencia-srtn
title SRTN – Shortest Remaining Time Next (con expropiación)

actor "Motor" as ENG
participant "EventQueue\n(t, prioridad, _seq)" as EQ
participant "SchedulerSRTN\n(clave: restante)" as SCH
participant "CPU" as CPU
participant "Proc Actual" as PC
participant "Proc Nuevo" as PN

== Actual ejecutando ==
ENG -> EQ : push( L→C @ t0, PC )
EQ  -> ENG : pop() = L→C @ t0
ENG -> CPU : abrir slice en t_s = t0 + TCP
note over CPU
  Reloj de CPU avanza desde t_s.
  SCH conoce el restante de PC y del resto de READY.
end note

== Arribo de nuevo con menor restante ==
ENG -> EQ : push( N→L @ t1, PN )  ' t1 >= t0
EQ  -> ENG : pop() = N→L @ t1
ENG -> SCH : onAdmit(PN)

== Decisión SRTN: ¿interrumpir? ==
note over SCH
  restante(actual, t) = r.restante - (t - sliceStart)  (si está en CPU)
  restante(listo, t)  = r.restante                     (no corre)
  Si restante(nuevo) < restante(actual) -> expropiar.
  Empates: romper estable (arribo, PID).
end note
ENG -> SCH : ¿restante(PN) < restante(PC_en_CPU_en_t1)?
alt Sí, PN tiene menor restante
  ' Expropiación: generar C→L del actual y despachar PN
  ENG -> EQ : push( C→L @ t1, PC )     ' corte del actual
  ENG -> EQ : push( L→C @ t1, PN )     ' despacho inmediato del nuevo (TCP aplica)
  note right
    Empate temporal: C→L y L→C @ t1
    Por prioridad L→C(6) va después de C→L(3),
    por lo que se cierra el slice de PC antes de abrir PN.
  end note
else No, PN no es menor
  ' No hay expropiación: PN queda en READY
  ENG -> SCH : onReady(PN)
end

== Cierre del actual por C→L ==
EQ  -> ENG : pop() = C→L @ t1 (PC)
ENG -> CPU : cerrar slice [t_s, t1]\nliberar CPU
ENG -> SCH : onDesalojoActual(PC)\nREADY.enqueue(PC) si queda restante

== Despacho del nuevo ==
EQ  -> ENG : pop() = L→C @ t1 (PN)
ENG -> CPU : abrir slice de PN en t_s' = t1 + TCP
ENG -> EQ  : push( C→B/C→T según restante de PN )

legend right
  Claves (SRTN):
   • Selección por MENOR RESTANTE (dinámico).
   • Arribo o retorno (B→L) de uno con menor restante → expropiación (C→L).
   • TCP se cobra en cada L→C (incluida expropiación).
   • Empate en mismo t: fin natural (C→T/C→B) gana a C→L (prioridad).
   • Timers de RR no se usan; el gatillo es el arribo/retorno del más corto.
endlegend
@enduml
