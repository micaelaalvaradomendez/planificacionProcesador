@startuml 01-clases-dominio
title Dominio mínimo – Proceso, Ráfagas y Costos (Paso 1)

' ===== Enumeraciones / Tipos de apoyo =====
enum EstadoProceso {
  NUEVO
  LISTO
  CORRIENDO
  BLOQUEADO
  TERMINADO
}

enum TipoRafaga {
  CPU
  ES   ' E/S (I/O)
}

' ===== Clases del dominio =====
class Proceso {
  +pid: int
  +arribo: int        ' tiempo de arribo (ms o ticks)
  +estado: EstadoProceso
  +rafagasCPU: List<int>  ' lista simple de duraciones (Paso 1)
  +costos: Costos
}

class Rafaga {
  +tipo: TipoRafaga   ' CPU o ES
  +duracion: int      ' unidades de tiempo
  +orden: int         ' posición en la secuencia
}

class Costos {
  +TIP: int          ' Tiempo de Ingreso de Proceso
  +TCP: int          ' Tiempo de Cambio de Proceso (context switch)
  +TFP: int          ' Tiempo de Fin de Proceso
  +bloqueoES: int    ' costo fijo de bloqueo E/S tras ráfaga de CPU (si aplica)
}

' ===== Relaciones =====
Proceso "1" o-- "1" Costos : tiene >
' Nota: Para Paso 1, rafagasCPU es List<int>, relación con Rafaga aplica en Paso 2+

' Reglas/Notas mínimas para el integrador
note right of Proceso
  **Reglas base (Paso 1):**
  • rafagasCPU es la secuencia alternada CPU/ES
    iniciando y terminando normalmente en CPU.
  • estado inicial = NUEVO al arribo.
  • costos aplica como overhead fuera del tiempo de ráfagas:
    TIP al entrar, TCP en cada expropiación/cambio, 
    TFP al finalizar, bloqueoES tras CPU si corresponde.
  • **servicioTotal(p) = sum(rafagasCPU)**; no incluye TIP/TCP/TFP ni bloqueoES.
end note

note right of Costos
  **Restricciones:**
  • valores ≥ 0
  • bloqueoES por defecto = 25
end note
@enduml
