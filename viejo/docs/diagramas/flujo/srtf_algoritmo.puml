@startuml SRTF_Algoritmo_Actualizado
title "Algoritmo SRTF - Implementación Real del Sistema"

start

:elegirSiguiente() llamado por Motor;

if (colaListos.length === 0?) then (SÍ)
  :return undefined;
  stop
endif

:Buscar proceso con menor restanteCPU;
note right
**Criterio SRTF:** 
restanteCPU = tiempo restante ráfaga ACTUAL
NO tiempo total restante del proceso
end note

partition "**Algoritmo de Selección**" {
  :mejor = primer proceso de cola;
  repeat
    :actual = siguiente proceso;
    if (actual.restanteCPU < mejor.restanteCPU?) then (SÍ)
      :mejor = actual;
    elseif (actual.restanteCPU == mejor.restanteCPU?) then (EMPATE)
      :usar compararPorTiempoLlegadaReady();
      note right: Desempate por orden llegada a READY
      if (actual llega antes?) then (SÍ)
        :mejor = actual;
      endif
    endif
  repeat while (hay más procesos?)
}

:return mejor;

' Evaluación de Expropiación
partition "**Evaluación de Expropiación**" {
  :debeExpropiar(procesoActual, procesoCandidato);
  note right
  **Regla CRÍTICA:**
  Expropia SOLO si:
  procesoCandidato.restanteCPU < procesoActual.restanteCPU
  
  En empates: mantener proceso actual
  end note
  
  if (candidato.restanteCPU < actual.restanteCPU?) then (SÍ)
    :return true - EXPROPIAR;
  else (NO)
    :return false - MANTENER;
  endif
}

stop

note top of start
**ESTRATEGIA SRTF - CARACTERÍSTICAS**

**Propiedades de la Clase:**
• nombre = 'SRTF'
• soportaExpropiación = true
• requiereQuantum = false

**Métodos Clave:**
• elegirSiguiente(): busca menor restanteCPU
• debeExpropiar(): compara restanteCPU estrictamente
• alVolverseListoProceso(): hook para eventos
• verificarExpropiacionInmediata(): evaluación preempción
• obtenerSiguienteConExpropiacion(): decisión completa

**Criterio Principal:** restanteCPU (ráfaga actual)
**Empates:** mantener proceso actual (NO expropiar)
end note

note bottom of stop
**ALGORITMO SRTF - IMPLEMENTACIÓN REAL**

**Filosofía:** "Shortest Remaining Time First"
• Versión expropiativa de SJF
• Minimiza tiempo promedio de respuesta
• Evaluación continua en cada evento

**Criterio de Expropiación:**
SOLO si: procesoCandidato.restanteCPU < procesoActual.restanteCPU
• Comparación estricta (<, no <=)
• En empates: mantener proceso actual
• Evita expropiaciones innecesarias

**Métrica Utilizada:**
restanteCPU = tiempo restante de ráfaga ACTUAL
• NO tiempo total del proceso
• NO suma de todas las ráfagas restantes
• Solo la ráfaga en curso

**Desempates:**
• Orden de llegada a READY
• Determinístico y consistente

**Ventajas:**
• Óptimo tiempo de respuesta teórico
• Reactivo a cambios en workload
• Fairness para procesos cortos

**Desventajas:**
• Mayor overhead por expropiación
• Inanición procesos largos
• Mayor complejidad implementación
end note


@enduml
